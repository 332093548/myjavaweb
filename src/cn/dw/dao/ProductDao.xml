<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 当前xml文件会取代以后daoImpl,因此所有的SQL语句建议编写XML文件中,而且此XML文件需要添加到mybatis.cfg.xml主配置文件中 -->
<mapper namespace="cn.dw.dao.ProductDao">

   <!-- 此处将要编写数据入库的SQL语句    public void save(Product product)-->
   <insert id="save" parameterType="product">
       <!-- #{name},会自动调用Product.getName()方法  -->
   	   insert into product (name,price,remark) values (#{name},#{price},#{remark})
   </insert>
   
   <update id="update" parameterType="product">
       <!-- #{name},会自动调用Product.getName()方法  
	   	   update product set name = #{name},price = #{price},remark = #{remark},date=#{date} where id = #{id}
       -->
       update product
       <!-- set会自动删除最后一个,号 -->
       <set>
       		<if test="name!=null">
       			name = #{name},
       		</if>
       		<if test="price!=null">
       			price = #{price},
       		</if>
       		<if test="remark!=null">
       			remark = #{remark},
       		</if>
       		<if test="date!=null">
       			date = #{date},
       		</if>
       </set>
       where id = #{id}
   </update>
   <!-- 如果只有一个参数, 那么#{名称随意},当然为了规范,建议与参数相同 -->
   <delete id="delete" parameterType="int">
        delete from product where id = #{id}
   </delete>
   
   <select id="getById" parameterType="int" resultType="product">
   	   select * from product where id = #{abc}
   </select>
   <!-- 如果接口中有多个参数,则通过@Param来绑定 -->
   <select id="queryByName" resultType="product">
   	   select * from product where name like #{name} limit #{start},#{end}
   </select>
  
</mapper>




























